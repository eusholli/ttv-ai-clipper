steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '--platform', 'linux/amd64',
      '-t', 'gcr.io/$PROJECT_ID/ttv-ai-clipper:$COMMIT_SHA',
      '.'
    ]
    id: 'build'
  
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/ttv-ai-clipper:$COMMIT_SHA']
    id: 'push'
    waitFor: ['build']
  
  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
    - 'run'
    - 'deploy'
    - 'ttv-ai-clipper'
    - '--service-account'
    - '921656223812-compute@developer.gserviceaccount.com'
    - '--image'
    - 'gcr.io/$PROJECT_ID/ttv-ai-clipper:$COMMIT_SHA'
    - '--region'
    - 'us-central1'
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'
    - '--memory'
    - '4Gi'
    - '--cpu'
    - '2'
    - '--min-instances'
    - '0'
    - '--max-instances'
    - '10'
    - '--add-cloudsql-instances'
    - '$PROJECT_ID:us-central1:ttv-ai-clipper-db'
    - '--set-env-vars'
    - |
      NODE_ENV=production,
      NGINX_ERROR_LOG_LEVEL=debug,
      INSTANCE_CONNECTION_NAME=$PROJECT_ID:us-central1:ttv-ai-clipper-db,
      DB_SOCKET_PATH=/cloudsql/$PROJECT_ID:us-central1:ttv-ai-clipper-db/.s.PGSQL.5432
    - '--timeout'
    - '600s'
    - '--timeout'
    - '600s'
    waitFor: ['build']

images:
  - 'gcr.io/$PROJECT_ID/ttv-ai-clipper:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
